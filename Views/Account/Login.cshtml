@model SchoolManagementSystem.Models.AccountViewModels.LoginViewModel

@{
    ViewData["Title"] = "Welcome Back";
    ViewData["Subtitle"] = "Sign in to continue to your account";
    Layout = "_AuthLayout";
    
    var returnUrl = Context.Request.Query["returnUrl"];
    var registerUrl = Url.Action("Register", "Account", new { returnUrl });
    
    ViewData["FooterText"] = $"Don't have an account? <a href='{registerUrl}' class='text-primary fw-medium'>Sign up</a>";
}

<form id="account" method="post" class="needs-validation" novalidate>
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
    
    <div class="mb-3">
        <label asp-for="Email" class="form-label">Email Address</label>
        <div class="input-group">
            <span class="input-group-text"><i class="fas fa-envelope"></i></span>
            <input asp-for="Email" class="form-control" autocomplete="username" placeholder="Enter your email" required>
        </div>
        <span asp-validation-for="Email" class="text-danger small"></span>
    </div>
    
    <div class="mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <label asp-for="Password" class="form-label">Password</label>
            <a asp-action="ForgotPassword" class="text-muted small">Forgot password?</a>
        </div>
        <div class="input-group">
            <span class="input-group-text"><i class="fas fa-lock"></i></span>
            <input asp-for="Password" class="form-control" autocomplete="current-password" placeholder="Enter your password" required>
            <button class="btn btn-outline-secondary toggle-password" type="button">
                <i class="fas fa-eye"></i>
            </button>
        </div>
        <span asp-validation-for="Password" class="text-danger small"></span>
    </div>
    
    <div class="mb-3 form-check">
        <input class="form-check-input" type="checkbox" asp-for="RememberMe">
        <label class="form-check-label" asp-for="RememberMe">
            Remember me
        </label>
    </div>
                    
    <button type="submit" class="btn btn-primary w-100 py-2 mb-3">
        <i class="fas fa-sign-in-alt me-2"></i>Sign In
    </button>
    
    <div class="text-center text-muted mb-3">
        <span>Or sign in with</span>
    </div>
    
    <div class="d-grid gap-2">
        <a href="#" class="btn btn-outline-primary">
            <i class="fab fa-google me-2"></i>Google
        </a>
        <a href="#" class="btn btn-outline-primary">
            <i class="fab fa-microsoft me-2"></i>Microsoft
        </a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Toggle password visibility
        document.querySelectorAll('.toggle-password').forEach(function(button) {
            button.addEventListener('click', function() {
                const input = this.previousElementSibling;
                const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
                input.setAttribute('type', type);
                this.querySelector('i').classList.toggle('fa-eye');
                this.querySelector('i').classList.toggle('fa-eye-slash');
            });
        });
        
        // Form validation
        (function () {
            'use strict'
            
            var forms = document.querySelectorAll('.needs-validation')
            
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}
